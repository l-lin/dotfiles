[includeIf "gitdir:~/work/"]
  path = ~/work/.gitconfig
[includeIf "gitdir:~/perso/"]
  path = ~/perso/.gitconfig
[includeIf "gitdir:/tmp/"]
  path = ~/perso/.gitconfig
[includeIf "gitdir:~/tmp/"]
  path = ~/perso/.gitconfig
[includeIf "gitdir:~/snap/"]
  path = ~/perso/.gitconfig
[user]
  name = Louis Lin
[credential]
  helper = cache
[core]
  editor = nvim
  excludesfile = ~/.gitignore_global
  autocrlf = input
  pager = delta
[alias]
  adda = add -A
  ba = branch -avv
  bd = branch -D
  cdiff = log --oneline --no-merges
  ci = !git add -A && git commit
  co = checkout
  cp = cherry-pick
  ignore = update-index --assume-unchanged
  ignored = !git ls-files -v | grep "^[[:lower:]]"
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci) %C(bold blue)%an <%ae>%Creset' --abbrev-commit
  lg5 = log -n5 --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci) %C(bold blue)%an <%ae>%Creset' --abbrev-commit
  logv = log --graph --all --decorate --stat --date=iso
  me = merge --no-ff
  oops = commit --amend
  pushf = push --force-with-lease
  rh = reset --hard
  rl = reflog --pretty=reflog
  st = status -sb
  undo = reset --soft HEAD^
  unignore = update-index --no-assume-unchanged
  wdiff = diff --word-diff --color-words=.
  wip = for-each-ref --sort='authordate:iso8601' --format=' %(color:green)%(authordate:relative)%09%(color:white)%(refname:short)' refs/heads
[push]
  default = upstream
  # automatically push new branch to remote withtout needing to set the upstream
  autoSetupRemote = true
# activate color for all commands
[color]
  ui = auto
# diff with meaningful prefix and word-diff will find a letter as a word
[diff]
  mnemonicprefix = true
  wordRegex = .
# commands will be autocorrect (rset -> reset)
[help]
  autocorrect = -1
# remember previous conflict resolutions
[rerere]
  enabled = true
# pull will do a rebase instead of a merge
[pull]
  rebase = true
# merge is looking harder for renames
[merge]
  renamelimit = 3000
  tool = meld
# Automatically stash any local changes before rebasing
[rebase]
  autostash = true
[pretty]
  # reflog, with relative date (but for commits, not reflog entries!):
  reflog = %Cred%h%Creset - %Cblue%gd%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci) %C(bold blue)<%an>%Creset
# shortcuts
[url "git@github.com:"]
  insteadOf = github:
  insteadOf = gh:
# LFS config
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
# branch
[branch]
  sort = -committerdate

# delta configuration: https://dandavison.github.io/delta/configuration.html
[delta]
  line-numbers = true
  side-by-side = true
[init]
  ; defaultBranch = main
  defaultBranch = master
[interactive]
  diffFilter = delta --color-only
