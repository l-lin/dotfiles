" vim: filetype=help foldmethod=marker foldmarker=<<<,>>> modifiable noreadonly
cheatsheet.txt VIM Cheatsheet
cheatsheet

==================================================================================
 ██████╗██╗  ██╗███████╗ █████╗ ████████╗███████╗██╗  ██╗███████╗███████╗████████╗
██╔════╝██║  ██║██╔════╝██╔══██╗╚══██╔══╝██╔════╝██║  ██║██╔════╝██╔════╝╚══██╔══╝
██║     ███████║█████╗  ███████║   ██║   ███████╗███████║█████╗  █████╗     ██║
██║     ██╔══██║██╔══╝  ██╔══██║   ██║   ╚════██║██╔══██║██╔══╝  ██╔══╝     ██║
╚██████╗██║  ██║███████╗██║  ██║   ██║   ███████║██║  ██║███████╗███████╗   ██║
 ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝╚══════╝╚══════╝   ╚═╝
==================================================================================
CONTENTS                                                             cs-contents

 1.    Normal mode................................cs-normal-mode
 1.1.  Cursor movement............................cs-cursor-movement
 1.2.  Marks......................................cs-marks
 1.3.  Copy / paste...............................cs-copy-paste
 1.5.  Delete.....................................cs-delete
 1.5.  Search / Replace...........................cs-search-replace
 1.6.  Correct words..............................cs-correct-words
 1.8.  Undo / Redo................................cs-undo-redo
 1.9.  Spell checking.............................cs-spell-checking
 1.10. Folding....................................cs-folding
 1.11. DBExt......................................cs-dbext
 1.12. DrawIt.....................................cs-drawit
 1.13. Custom shortcuts...........................cs-custom-shortcuts
 1.14. Surround...................................cs-surround
 2.    Visual mode................................cs-visual-mode
 3.    Commands...................................cs-commands
 3.1.  Buffers....................................cs-buffers
 3.2.  Splits.....................................cs-splits
 3.3.  Explorer...................................cs-explorer
 4.    Tips & tricks..............................cs-tips-n-tricks

==================================================================================
NORMAL MODE                                                       cs-normal-mode

`ZZ`    - save and exit
`ZQ`    - exit without saving
`i`     - start insert mode at cursor
`I`     - insert at the beginning of the line
`a`     - append after the cursor
`A`     - append at the end of the line
`o`     - open (append) blank line below current line (no need to press return)
`O`     - open blank line above current line
`ea`    - append at end of word
`Esc`   - exit insert mode
`alt-,` - exit insert mode
`C-w`   - delete word before cursor
`C-d`   - delete word after cursor
`R`     - switch to replace mode

==================================================================================
CURSOR MOVEMENT                                               cs-cursor-movement

`w`   - jump by start of words (punctuation considered words)
`W`   - jump by words (spaces separate words)
`e`   - jump to end of words (punctuation considered words)
`E`   - jump to end of words (no punctuation)
`b`   - jump backward by words (punctuation considered words)
`B`   - jump backward by words (no punctuation)
`0`   - (zero) start of line
`^`   - first non-blank character of line
`$`   - end of line
`#G`  - go to # line command (prefix with number - 5G goes to line 5)
`gg`  - go to first line of file
`G`   - go to last line of file
`C-o` - jump to previous location
`H`   - jump to TOP of screen
`M`   - Jump to BOTTOM of screen
`g;`  - jump to last edited position
`gf`  - edit file located at the filepath under the cursor
`gx`  - openl file located at the filepath under the cursor (also works on URL)
`zz`  - center screen on current line
`zt`  - bring current line to top of the screen
`zb`  - bring current line to the bottom of the screen
`z.`  - center screen on current line + reposition cursor to the beginning of the line
`z-Enter` - bring current line to top of the screen + reposition cursor to the beginning of the line
`z-`  - bring current line to the bottom of the screen + reposition cursor to the beginning of the line
`{`   - previous paragraph
`}`   - next paragraph

==================================================================================
MARKS                                                                   cs-marks

`ma`     - set mark `a` at current cursor location
`'a`     - jump to line of mark
``a`     - jump to position of mark `a`
`'V`     - jump to .vimrc
`'Z`     - jump to .zshrc
`:marks` - list all current marks

==================================================================================
COPY / PASTE                                                       cs-copy-paste

`yy`      - yank (copy) a line
`2yy`     - yank 2 lines
`yw`      - yank word
`y$`      - yank to end of line
`p`       - put (paste) the clipboard after cursor
`P`       - put (paste) before cursor
`dd`      - delete (cut) a line
`dw`      - delete (cut) the current word
`x`       - delete (cut) current character
`shift-v` - to visual mode (to copy multiple lines)
`C-v`     - multiline visual mode
`"*y`     - copy selected text in visual mode to clipboard (3rd mouse click)
`"*yy`    - copy current line to clipboard (3rd mouse click)

==================================================================================
DELETE                                                                 cs-delete

`dd`    - remove line
`dw`    - delete until next word, excluding the first character
`de`    - delete until end of the current, excluding the last character
`d$`    - delete until end of line
`D`     - same as d$
`d^`    - delete up unto the beginning of the line
`:1,4d` - delete line 1 to 40 included
`:2,$d` - delete every lines from second one until the end of file
`:.,$d` - delete every lines from the current one until the end of file
`:%d`   - delete every lines
`daw`   - delete word under cursor

==================================================================================
SEARCH / REPLACE                                               cs-search-replace

`/pattern`               - search for pattern
`?pattern`               - search backward for pattern
`n`                      - repeat search in same direction
`N`                      - repeat search in opposite direction
`:%s/old/new/g`          - replace all old with new throughout file
`:%s/old/new/gc`         - replace all old with new throughout file with confirmations
`:/\v(\w+)`              - search with regexp
`:%s/\v([0-9]+)/Foo\1/g` - search with regexp and replace with group

==================================================================================
CORRECT WORDS                                                   cs-correct-words

`x`   - delete char UNDER cursor
`X`   - delete char BEFORE cursor
`#x`  - delete the next # chars, starting from char under cursor
`ce`  - correct the word from the cursor position (it will put in Insert mode)
`cw`  - same as previous
`caw` - correct the whole word under cursor
`c$`  - correct from the cursor position to the end of line
`cc`  - correct the entire line
`#J`  - merge # number of lines together

==================================================================================
UNDO - REDO                                                         cs-undo-redo

`u`   - undo
`C-r` - undo the undo

==================================================================================
SPELL CHECKING                                                 cs-spell-checking

`]s` - go to next misspelled word
`[s` - go to previous misspelled word
`z=` - find suggestions for the word
`zg` - add word under the cursor as good word
`,c` - perform :GrammarousCheck to check grammar errors

==================================================================================
FOLDING                                                               cs-folding

`zc` - close fold
`zo` - open fold
`za` - toggle fold
`zM` - close all folds
`zR` - open all folds

==================================================================================
DBEXT                                                                   cs-dbext

`,se`  - execute sql query
`,sbp` - change profile
`,sdt` - describe table
`,slt` - list tables

==================================================================================
DRAWIT                                                                 cs-drawit

`,di` - start drawing
`,ds` - stop drawing

features

`<left>`    - move and draw left
`<right>`   - move and draw right, inserting lines/space as needed
`<up>`      - move and draw up, inserting lines/space as needed
`<down>`    - move and draw down, inserting lines/space as needed
`<s-left>`  - move left
`<s-right>` - move right, inserting lines/space as needed
`<s-up>`    - move up, inserting lines/space as needed
`<s-down>`  - move down, inserting lines/space as needed
`<space>`   - toggle into and out of erase mode
`>`         - draw -> arrow
`<`         - draw <- arrow
`^`         - draw ^  arrow
`v`         - draw v  arrow
`,>`        - draw fat -> arrow
`,<`        - draw fat <- arrow
`,^`        - draw fat ^  arrow
`,v`        - draw fat v  arrow

==================================================================================
VISUAL MODE                                                       cs-visual-mode

`u` - to lower case
`U` - to upper case
`~` - change case
`o` - swap between moving the top and bottom boundary

==================================================================================
CUSTOM SHORTCUTS                                             cs-custom-shortcuts

`C-Tab` - omnicompletion
`;;`    - switch buffer
`C-b`   - execute godef (Go to definition in Golang)
`C-n`   - show/hide line numbers
`space` - toggle highlighting on/off
`F2`    - toggle auto-indenting for code paste
`,w`    - fast saving
`,q`    - fast quitting
`,x`    - fast saving & quitting
`,o`    - open explorer
`,u`    - open undo tree
`C-y`   - cut line
`,l`    - format code

==================================================================================
SURROUND PLUGIN SHORTCUTS                                            cs-surround

Ref https://github.com/tpope/vim-surround/blob/master/doc/surround.txt

`cs` - change surrounding
`ds` - delete surrounding
`ys` - takes a valid Vim motion or text object as the first object and wraps it

==================================================================================
COMMANDS                                                             cs-commands

Ref: https://learnvim.irian.to/basics/the_global_command

`:!<cmd>` - execute <cmd>
`:g/<pattern>/<command>` - global command
`:v/<pattern>/<command>` - reverse global command
`:g!/<pattern>/<command>` - reverse global command
`:g/foobar/d` - delete all lines containing "foobar"
`:g/one\|two/d` - delete all lines containing either "one" or "two"
`:g/foobar/p` - print all lines containing "foobar"
`:g/foobar` - print all lines containing "foobar" (print is the default value)
`:g/./normal A;` - add a ";" to the end of each non-empty lines
`:g/foo/g/bar/d` - find lines containing "foo", then among them, delete all lines containing "bar"
`:g/foo/d _` - delete all lines containing "foo" and do not save them in yank register

==================================================================================
BUFFERS                                                               cs-buffers

`:enew`   - create a new buffer
`:bd`     - remove current buffer
`:bn`     - open to next buffer
`:bp`     - open to previous buffer
`<C-w>w`  - move to floating buffer
`<C-w>p`  - move to floating buffer
`<C-^>`   - switch back and forth from buffer

==================================================================================
SPLITS                                                                 cs-splits

`<C-w>`  - "leader" key mapping to handle splits
`<C-w>v` - split vertically
`<C-w>s` - split horizontally

==================================================================================
EXPLORER                                                             cs-explorer

`:e`       - open a file
`:Explore` - open explorer

==================================================================================
INSERT MODE                                                       cs-insert-mode

`<C-r>` - open yank register

==================================================================================
TIPS & TRICKS                                                   cs-tips-n-tricks

Comment multiple lines
----------------------
- `C-v`
- select the lines you want to comment
- press `I` (capital i)
- insert your comment, e.g. `//`
- press Escape
- voila!

Format existing text at X characters (defined in your .vimrc) for your markdown
-------------------------------------------------------------------------------
- select the lines you want to format with `v`, `C-v` or `S-v`
- press `gq`
Ref: https://thoughtbot.com/blog/wrap-existing-text-at-80-characters-in-vim

Insert # times "Foobar"
-----------------------
`3i Foobar <ESC>` in normal mode

Sorting text
------------
`:sort `          - sort all lines
`:sort!          `- sort all lines in reverse
`:sort n         `- sort depending on the first decimal on the line
`:sort f         `- sort depending on the first float on the line
`:sort /pattern/ `- sort depending on what comes after the match
`:sort /[^,]*,/`  - sort every line of a CSV file depending on the second column

